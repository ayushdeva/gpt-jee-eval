{"ideal":"SELECT count(*) FROM singer","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: How many singers do we have?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM singer","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What is the total number of singers?\n","role":"system"}]}
{"ideal":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: Show name, country, age for all singers ordered by age from the oldest to the youngest.\n","role":"system"}]}
{"ideal":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What are the names, countries, and ages for every singer in descending order of age?\n","role":"system"}]}
{"ideal":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What is the average, minimum, and maximum age of all singers from France?\n","role":"system"}]}
{"ideal":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What is the average, minimum, and maximum age for all French singers?\n","role":"system"}]}
{"ideal":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: Show the name and the release year of the song by the youngest singer.\n","role":"system"}]}
{"ideal":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What are the names and release years for all the songs of the youngest singer?\n","role":"system"}]}
{"ideal":"SELECT DISTINCT country FROM singer WHERE age  >  20","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What are all distinct countries where singers above age 20 are from?\n","role":"system"}]}
{"ideal":"SELECT DISTINCT country FROM singer WHERE age  >  20","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: stadium. Columns: Stadium_ID (number), Location (text), Name (text), Capacity (number), Highest (number), Lowest (number), Average (number)\nTable: singer. Columns: Singer_ID (number), Name (text), Country (text), Song_Name (text), Song_release_year (text), Age (number), Is_male (others)\nTable: concert. Columns: concert_ID (number), concert_Name (text), Theme (text), Stadium_ID (text), Year (text)\nTable: singer_in_concert. Columns: concert_ID (number), Singer_ID (text)\n\nQuestion: What are  the different countries with singers above age 20?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM pets WHERE weight  >  10","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: Find the number of pets whose weight is heavier than 10.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM pets WHERE weight  >  10","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: How many pets have a greater weight than 10?\n","role":"system"}]}
{"ideal":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: Find the weight of the youngest dog.\n","role":"system"}]}
{"ideal":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: How much does the youngest dog weigh?\n","role":"system"}]}
{"ideal":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: Find the maximum weight for each type of pet. List the maximum weight and pet type.\n","role":"system"}]}
{"ideal":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: List the maximum weight and type for each type of pet.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: Find number of pets owned by students who are older than 20.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: How many pets are owned by students that have an age greater than 20?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: Find the number of dog pets that are raised by female students (with sex F).\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Student. Columns: StuID (number), LName (text), Fname (text), Age (number), Sex (text), Major (number), Advisor (number), city_code (text)\nTable: Has_Pet. Columns: StuID (number), PetID (number)\nTable: Pets. Columns: PetID (number), PetType (text), pet_age (number), weight (number)\n\nQuestion: How many dog pets are raised by female students?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM CONTINENTS;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: How many continents are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM CONTINENTS;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: What is the number of continents?\n","role":"system"}]}
{"ideal":"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: How many countries does each continent have? List the continent id, continent name and the number of countries.\n","role":"system"}]}
{"ideal":"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: For each continent, list its id, name, and how many countries it has?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM COUNTRIES;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: How many countries are listed?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM COUNTRIES;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: How many countries exist?\n","role":"system"}]}
{"ideal":"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: How many models does each car maker produce? List maker full name, id and the number.\n","role":"system"}]}
{"ideal":"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: What is the full name of each car maker, along with its id and how many models it produces?\n","role":"system"}]}
{"ideal":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: Which model of the car has the minimum horsepower?\n","role":"system"}]}
{"ideal":"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: continents. Columns: ContId (number), Continent (text)\nTable: countries. Columns: CountryId (number), CountryName (text), Continent (number)\nTable: car_makers. Columns: Id (number), Maker (text), FullName (text), Country (text)\nTable: model_list. Columns: ModelId (number), Maker (number), Model (text)\nTable: car_names. Columns: MakeId (number), Model (text), Make (text)\nTable: cars_data. Columns: Id (number), MPG (text), Cylinders (number), Edispl (number), Horsepower (text), Weight (number), Accelerate (number), Year (number)\n\nQuestion: What is the model of the car with the smallest amount of horsepower?\n","role":"system"}]}
{"ideal":"SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: Which country does Airline \"JetBlue Airways\" belong to?\n","role":"system"}]}
{"ideal":"SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: What country is Jetblue Airways affiliated with?\n","role":"system"}]}
{"ideal":"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: What is the abbreviation of Airline \"JetBlue Airways\"?\n","role":"system"}]}
{"ideal":"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: Which abbreviation corresponds to Jetblue Airways?\n","role":"system"}]}
{"ideal":"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: List all airline names and their abbreviations in \"USA\".\n","role":"system"}]}
{"ideal":"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: What are the airline names and abbreviations for airlines in the USA?\n","role":"system"}]}
{"ideal":"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: List the airport code and name in the city of Anthony.\n","role":"system"}]}
{"ideal":"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: Give the airport code and airport name corresonding to the city Anthony.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM AIRLINES","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: How many airlines do we have?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM AIRLINES","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: airlines. Columns: uid (number), Airline (text), Abbreviation (text), Country (text)\nTable: airports. Columns: City (text), AirportCode (text), AirportName (text), Country (text), CountryAbbrev (text)\nTable: flights. Columns: Airline (number), FlightNo (number), SourceAirport (text), DestAirport (text)\n\nQuestion: What is the total number of airlines?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM employee","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: How many employees are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM employee","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: Count the number of employees\n","role":"system"}]}
{"ideal":"SELECT name FROM employee ORDER BY age","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: Sort employee names by their age in ascending order.\n","role":"system"}]}
{"ideal":"SELECT name FROM employee ORDER BY age","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: List the names of employees and sort in ascending order of age.\n","role":"system"}]}
{"ideal":"SELECT count(*) ,  city FROM employee GROUP BY city","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: What is the number of employees from each city?\n","role":"system"}]}
{"ideal":"SELECT count(*) ,  city FROM employee GROUP BY city","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: Count the number of employees for each city.\n","role":"system"}]}
{"ideal":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: Which cities do more than one employee under age 30 come from?\n","role":"system"}]}
{"ideal":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: Find the cities that have more than one employee under age 30.\n","role":"system"}]}
{"ideal":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: Find the number of shops in each location.\n","role":"system"}]}
{"ideal":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: employee. Columns: Employee_ID (number), Name (text), Age (number), City (text)\nTable: shop. Columns: Shop_ID (number), Name (text), Location (text), District (text), Number_products (number), Manager_name (text)\nTable: hiring. Columns: Shop_ID (number), Employee_ID (number), Start_from (text), Is_full_time (others)\nTable: evaluation. Columns: Employee_ID (text), Year_awarded (text), Bonus (number)\n\nQuestion: How many shops are there in each location?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Documents","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: How many documents do we have?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Documents","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: Count the number of documents.\n","role":"system"}]}
{"ideal":"SELECT document_id ,  document_name ,  document_description FROM Documents","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: List document IDs, document names, and document descriptions for all documents.\n","role":"system"}]}
{"ideal":"SELECT document_id ,  document_name ,  document_description FROM Documents","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: What are the ids, names, and descriptions for all documents?\n","role":"system"}]}
{"ideal":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: What is the document name and template id for document with description with the letter 'w' in it?\n","role":"system"}]}
{"ideal":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: Return the names and template ids for documents that contain the letter w in their description.\n","role":"system"}]}
{"ideal":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: What is the document id, template id and description for document named \"Robbin CV\"?\n","role":"system"}]}
{"ideal":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: Return the document id, template id, and description for the document with the name Robbin CV.\n","role":"system"}]}
{"ideal":"SELECT count(DISTINCT template_id) FROM Documents","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: How many different templates do all document use?\n","role":"system"}]}
{"ideal":"SELECT count(DISTINCT template_id) FROM Documents","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Template_Types. Columns: Template_Type_Code (text), Template_Type_Description (text)\nTable: Templates. Columns: Template_ID (number), Version_Number (number), Template_Type_Code (text), Date_Effective_From (time), Date_Effective_To (time), Template_Details (text)\nTable: Documents. Columns: Document_ID (number), Template_ID (number), Document_Name (text), Document_Description (text), Other_Details (text)\nTable: Paragraphs. Columns: Paragraph_ID (number), Document_ID (number), Paragraph_Text (text), Other_Details (text)\n\nQuestion: Count the number of different templates used for documents.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM teacher","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: How many teachers are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM teacher","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: What is the total count of teachers?\n","role":"system"}]}
{"ideal":"SELECT Name FROM teacher ORDER BY Age ASC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: List the names of teachers in ascending order of age.\n","role":"system"}]}
{"ideal":"SELECT Name FROM teacher ORDER BY Age ASC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: What are the names of the teachers ordered by ascending age?\n","role":"system"}]}
{"ideal":"SELECT Age ,  Hometown FROM teacher","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: What are the age and hometown of teachers?\n","role":"system"}]}
{"ideal":"SELECT Age ,  Hometown FROM teacher","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: What is the age and hometown of every teacher?\n","role":"system"}]}
{"ideal":"select name from teacher where hometown != \"little lever urban district\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: List the name of teachers whose hometown is not `` Little Lever Urban District '' .\n","role":"system"}]}
{"ideal":"select name from teacher where hometown != \"little lever urban district\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?\n","role":"system"}]}
{"ideal":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: Show the name of teachers aged either 32 or 33?\n","role":"system"}]}
{"ideal":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: course. Columns: Course_ID (number), Staring_Date (text), Course (text)\nTable: teacher. Columns: Teacher_ID (number), Name (text), Age (text), Hometown (text)\nTable: course_arrange. Columns: Course_ID (number), Teacher_ID (number), Grade (number)\n\nQuestion: What are the names of the teachers who are aged either 32 or 33?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM visitor WHERE age  <  30","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: How many visitors below age 30 are there?\n","role":"system"}]}
{"ideal":"SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.\n","role":"system"}]}
{"ideal":"SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: What is the average age of the visitors whose membership level is not higher than 4?\n","role":"system"}]}
{"ideal":"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.\n","role":"system"}]}
{"ideal":"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: Find the id and name of the museum that has the most staff members?\n","role":"system"}]}
{"ideal":"SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: Find the average number of staff working for the museums that were open before 2009.\n","role":"system"}]}
{"ideal":"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: What are the opening year and staff number of the museum named Plaza Museum?\n","role":"system"}]}
{"ideal":"SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.\n","role":"system"}]}
{"ideal":"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: find the id, name and age for visitors who visited some museums more than once.\n","role":"system"}]}
{"ideal":"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: museum. Columns: Museum_ID (number), Name (text), Num_of_Staff (number), Open_Year (text)\nTable: visitor. Columns: ID (number), Name (text), Level_of_membership (number), Age (number)\nTable: visit. Columns: Museum_ID (number), visitor_ID (text), Num_of_Ticket (number), Total_spent (number)\n\nQuestion: What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM players","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: Find the total number of players.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM players","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: How many players are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM matches","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: Find the total number of matches.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM matches","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: Count the number of matches.\n","role":"system"}]}
{"ideal":"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: List the first name and birth date of all players from the country with code USA.\n","role":"system"}]}
{"ideal":"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: What are the first names and birth dates of players from the USA?\n","role":"system"}]}
{"ideal":"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: Find the average age of losers and winners of all matches.\n","role":"system"}]}
{"ideal":"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: What are the average ages of losers and winners across matches?\n","role":"system"}]}
{"ideal":"SELECT avg(winner_rank) FROM matches","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: Find the average rank of winners in all matches.\n","role":"system"}]}
{"ideal":"SELECT avg(winner_rank) FROM matches","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: players. Columns: player_id (number), first_name (text), last_name (text), hand (text), birth_date (time), country_code (text)\nTable: matches. Columns: best_of (number), draw_size (number), loser_age (number), loser_entry (text), loser_hand (text), loser_ht (number), loser_id (number), loser_ioc (text), loser_name (text), loser_rank (number), loser_rank_points (number), loser_seed (number), match_num (number), minutes (number), round (text), score (text), surface (text), tourney_date (time), tourney_id (text), tourney_level (text), tourney_name (text), winner_age (number), winner_entry (text), winner_hand (text), winner_ht (number), winner_id (number), winner_ioc (text), winner_name (text), winner_rank (number), winner_rank_points (number), winner_seed (number), year (number)\nTable: rankings. Columns: ranking_date (time), ranking (number), player_id (number), ranking_points (number), tours (number)\n\nQuestion: What is the average rank for winners in all matches?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: How many ships ended up being 'Captured'?\n","role":"system"}]}
{"ideal":"SELECT name ,  tonnage FROM ship ORDER BY name DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: List the name and tonnage ordered by in descending alphaetical order for the names.\n","role":"system"}]}
{"ideal":"SELECT name ,  date FROM battle","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: List the name, date and result of each battle.\n","role":"system"}]}
{"ideal":"SELECT max(killed) ,  min(killed) FROM death","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What is maximum and minimum death toll caused each time?\n","role":"system"}]}
{"ideal":"SELECT avg(injured) FROM death","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What is the average number of injuries caused each time?\n","role":"system"}]}
{"ideal":"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What are the death and injury situations caused by the ship with tonnage 't'?\n","role":"system"}]}
{"ideal":"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What are the name and results of the battles when the bulgarian commander is not 'Boril'\n","role":"system"}]}
{"ideal":"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What are the different ids and names of the battles that lost any 'Brig' type shipes?\n","role":"system"}]}
{"ideal":"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What are the ids and names of the battles that led to more than 10 people killed in total.\n","role":"system"}]}
{"ideal":"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: battle. Columns: id (number), name (text), date (text), bulgarian_commander (text), latin_commander (text), result (text)\nTable: ship. Columns: lost_in_battle (number), id (number), name (text), tonnage (text), ship_type (text), location (text), disposition_of_ship (text)\nTable: death. Columns: caused_by_ship_id (number), id (number), note (text), killed (number), injured (number)\n\nQuestion: What is the ship id and name that caused most total injuries?\n","role":"system"}]}
{"ideal":"SELECT line_1 ,  line_2 FROM addresses","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: what are all the addresses including line 1 and line 2?\n","role":"system"}]}
{"ideal":"SELECT line_1 ,  line_2 FROM addresses","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: What is the first and second line for all addresses?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Courses","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: How many courses in total are listed?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Courses","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: How many courses are there?\n","role":"system"}]}
{"ideal":"SELECT course_description FROM Courses WHERE course_name  =  'math'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: How is the math course described?\n","role":"system"}]}
{"ideal":"SELECT course_description FROM Courses WHERE course_name  =  'math'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: What are the descriptions for all the math courses?\n","role":"system"}]}
{"ideal":"SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: What is the zip code of the address in the city Port Chelsea?\n","role":"system"}]}
{"ideal":"SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: What is the zip code for Port Chelsea?\n","role":"system"}]}
{"ideal":"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: Which department offers the most number of degrees? List department name and id.\n","role":"system"}]}
{"ideal":"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Addresses. Columns: address_id (number), line_1 (text), line_2 (text), line_3 (text), city (text), zip_postcode (text), state_province_county (text), country (text), other_address_details (text)\nTable: Courses. Columns: course_id (number), course_name (text), course_description (text), other_details (text)\nTable: Departments. Columns: department_id (number), department_name (text), department_description (text), other_details (text)\nTable: Degree_Programs. Columns: degree_program_id (number), department_id (number), degree_summary_name (text), degree_summary_description (text), other_details (text)\nTable: Sections. Columns: section_id (number), course_id (number), section_name (text), section_description (text), other_details (text)\nTable: Semesters. Columns: semester_id (number), semester_name (text), semester_description (text), other_details (text)\nTable: Students. Columns: student_id (number), current_address_id (number), permanent_address_id (number), first_name (text), middle_name (text), last_name (text), cell_mobile_number (text), email_address (text), ssn (text), date_first_registered (time), date_left (time), other_student_details (text)\nTable: Student_Enrolment. Columns: student_enrolment_id (number), degree_program_id (number), semester_id (number), student_id (number), other_details (text)\nTable: Student_Enrolment_Courses. Columns: student_course_id (number), course_id (number), student_enrolment_id (number)\nTable: Transcripts. Columns: transcript_id (number), transcript_date (time), other_details (text)\nTable: Transcript_Contents. Columns: student_course_id (number), transcript_id (number)\n\nQuestion: What is the name and id of the department with the most number of degrees ?\n","role":"system"}]}
{"ideal":"SELECT Title FROM Cartoon ORDER BY title","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: List the title of all cartoons in alphabetical order.\n","role":"system"}]}
{"ideal":"SELECT Title FROM Cartoon ORDER BY title","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: What are the titles of the cartoons sorted alphabetically?\n","role":"system"}]}
{"ideal":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: List all cartoon directed by \"Ben Jones\".\n","role":"system"}]}
{"ideal":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: What are the names of all cartoons directed by Ben Jones?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: How many cartoons were written by \"Joseph Kuhr\"?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: What is the number of cartoones written by Joseph Kuhr?\n","role":"system"}]}
{"ideal":"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: list all cartoon titles and their directors ordered by their air date\n","role":"system"}]}
{"ideal":"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: What is the name and directors of all the cartoons that are ordered by air date?\n","role":"system"}]}
{"ideal":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".\n","role":"system"}]}
{"ideal":"SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: TV_Channel. Columns: id (text), series_name (text), Country (text), Language (text), Content (text), Pixel_aspect_ratio_PAR (text), Hight_definition_TV (text), Pay_per_view_PPV (text), Package_Option (text)\nTable: TV_series. Columns: id (number), Episode (text), Air_Date (text), Rating (text), Share (number), 18_49_Rating_Share (text), Viewers_m (text), Weekly_Rank (number), Channel (text)\nTable: Cartoon. Columns: id (number), Title (text), Directed_by (text), Written_by (text), Original_air_date (text), Production_code (number), Channel (text)\n\nQuestion: What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM poker_player","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: How many poker players are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM poker_player","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: Count the number of poker players.\n","role":"system"}]}
{"ideal":"SELECT Earnings FROM poker_player ORDER BY Earnings DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: List the earnings of poker players in descending order.\n","role":"system"}]}
{"ideal":"SELECT Earnings FROM poker_player ORDER BY Earnings DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: What are the earnings of poker players, ordered descending by value?\n","role":"system"}]}
{"ideal":"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: List the final tables made and the best finishes of poker players.\n","role":"system"}]}
{"ideal":"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: What are the final tables made and best finishes for all poker players?\n","role":"system"}]}
{"ideal":"SELECT avg(Earnings) FROM poker_player","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: What is the average earnings of poker players?\n","role":"system"}]}
{"ideal":"SELECT avg(Earnings) FROM poker_player","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: Return the average earnings across all poker players.\n","role":"system"}]}
{"ideal":"SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: What is the money rank of the poker player with the highest earnings?\n","role":"system"}]}
{"ideal":"SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: poker_player. Columns: Poker_Player_ID (number), People_ID (number), Final_Table_Made (number), Best_Finish (number), Money_Rank (number), Earnings (number)\nTable: people. Columns: People_ID (number), Nationality (text), Name (text), Birth_Date (text), Height (number)\n\nQuestion: Return the money rank of the player with the greatest earnings.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM area_code_state","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: How many states are there?\n","role":"system"}]}
{"ideal":"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: List the contestant numbers and names, ordered by contestant name descending.\n","role":"system"}]}
{"ideal":"SELECT vote_id ,  phone_number ,  state FROM votes","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: List the vote ids, phone numbers and states of all votes.\n","role":"system"}]}
{"ideal":"SELECT max(area_code) ,  min(area_code) FROM area_code_state","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: What are the maximum and minimum values of area codes?\n","role":"system"}]}
{"ideal":"SELECT max(created) FROM votes WHERE state  =  'CA'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: What is last date created of votes from the state 'CA'?\n","role":"system"}]}
{"ideal":"SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: What are the names of the contestants whose names are not 'Jessie Alloway'\n","role":"system"}]}
{"ideal":"SELECT DISTINCT state ,  created FROM votes","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: What are the distinct states and create time of all votes?\n","role":"system"}]}
{"ideal":"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: What are the contestant numbers and names of the contestants who had at least two votes?\n","role":"system"}]}
{"ideal":"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: AREA_CODE_STATE. Columns: area_code (number), state (text)\nTable: CONTESTANTS. Columns: contestant_number (number), contestant_name (text)\nTable: VOTES. Columns: vote_id (number), phone_number (number), state (text), contestant_number (number), created (time)\n\nQuestion: What are the number of votes from state 'NY' or 'CA'?\n","role":"system"}]}
{"ideal":"SELECT Name FROM country WHERE IndepYear  >  1950","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: What are the names of all the countries that became independent after 1950?\n","role":"system"}]}
{"ideal":"SELECT Name FROM country WHERE IndepYear  >  1950","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: Give the names of the nations that were founded after 1950.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: How many countries have a republic as their form of government?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: How many countries have governments that are republics?\n","role":"system"}]}
{"ideal":"SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: What is the total surface area of the countries in the Caribbean region?\n","role":"system"}]}
{"ideal":"SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: How much surface area do the countires in the Carribean cover together?\n","role":"system"}]}
{"ideal":"SELECT Continent FROM country WHERE Name  =  \"Anguilla\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: Which continent is Anguilla in?\n","role":"system"}]}
{"ideal":"SELECT Continent FROM country WHERE Name  =  \"Anguilla\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: What is the continent name which Anguilla belongs to?\n","role":"system"}]}
{"ideal":"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: Which region is the city Kabul located in?\n","role":"system"}]}
{"ideal":"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: city. Columns: ID (number), Name (text), CountryCode (text), District (text), Population (number)\nTable: sqlite_sequence. Columns: name (text), seq (text)\nTable: country. Columns: Code (text), Name (text), Continent (text), Region (text), SurfaceArea (number), IndepYear (number), Population (number), LifeExpectancy (number), GNP (number), GNPOld (number), LocalName (text), GovernmentForm (text), HeadOfState (text), Capital (number), Code2 (text)\nTable: countrylanguage. Columns: CountryCode (text), Language (text), IsOfficial (text), Percentage (number)\n\nQuestion: What region is Kabul in?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM conductor","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: How many conductors are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM conductor","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: Count the number of conductors.\n","role":"system"}]}
{"ideal":"SELECT Name FROM conductor ORDER BY Age ASC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: List the names of conductors in ascending order of age.\n","role":"system"}]}
{"ideal":"SELECT Name FROM conductor ORDER BY Age ASC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: What are the names of conductors, ordered by age?\n","role":"system"}]}
{"ideal":"SELECT Name FROM conductor WHERE Nationality != 'USA'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: What are the names of conductors whose nationalities are not \"USA\"?\n","role":"system"}]}
{"ideal":"SELECT Name FROM conductor WHERE Nationality != 'USA'","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: Return the names of conductors that do not have the nationality \"USA\".\n","role":"system"}]}
{"ideal":"SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: What are the record companies of orchestras in descending order of years in which they were founded?\n","role":"system"}]}
{"ideal":"SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: Return the record companies of orchestras, sorted descending by the years in which they were founded.\n","role":"system"}]}
{"ideal":"SELECT avg(Attendance) FROM SHOW","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: What is the average attendance of shows?\n","role":"system"}]}
{"ideal":"SELECT avg(Attendance) FROM SHOW","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: conductor. Columns: Conductor_ID (number), Name (text), Age (number), Nationality (text), Year_of_Work (number)\nTable: orchestra. Columns: Orchestra_ID (number), Orchestra (text), Conductor_ID (number), Record_Company (text), Year_of_Founded (number), Major_Record_Format (text)\nTable: performance. Columns: Performance_ID (number), Orchestra_ID (number), Type (text), Date (text), Official_ratings_(millions) (number), Weekly_rank (text), Share (text)\nTable: show. Columns: Show_ID (number), Performance_ID (number), If_first_show (others), Result (text), Attendance (number)\n\nQuestion: Return the average attendance across all shows.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Highschooler","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: How many high schoolers are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Highschooler","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: Count the number of high schoolers.\n","role":"system"}]}
{"ideal":"SELECT name ,  grade FROM Highschooler","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: Show the names and grades of each high schooler.\n","role":"system"}]}
{"ideal":"SELECT name ,  grade FROM Highschooler","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: What are the names and grades for each high schooler?\n","role":"system"}]}
{"ideal":"SELECT grade FROM Highschooler","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: Show all the grades of the high schoolers.\n","role":"system"}]}
{"ideal":"SELECT grade FROM Highschooler","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: What is the grade of each high schooler?\n","role":"system"}]}
{"ideal":"SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: What grade is Kyle in?\n","role":"system"}]}
{"ideal":"SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: Return the grade for the high schooler named Kyle.\n","role":"system"}]}
{"ideal":"SELECT name FROM Highschooler WHERE grade  =  10","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: Show the names of all high schoolers in grade 10.\n","role":"system"}]}
{"ideal":"SELECT name FROM Highschooler WHERE grade  =  10","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Highschooler. Columns: ID (number), name (text), grade (number)\nTable: Friend. Columns: student_id (number), friend_id (number)\nTable: Likes. Columns: student_id (number), liked_id (number)\n\nQuestion: What are the names of all high schoolers in grade 10?\n","role":"system"}]}
{"ideal":"SELECT state FROM Owners INTERSECT SELECT state FROM Professionals","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Which states have both owners and professionals living there?\n","role":"system"}]}
{"ideal":"SELECT state FROM Owners INTERSECT SELECT state FROM Professionals","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Find the states where both owners and professionals live.\n","role":"system"}]}
{"ideal":"SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: What is the average age of the dogs who have gone through any treatments?\n","role":"system"}]}
{"ideal":"SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Find the average age of the dogs who went through treatments.\n","role":"system"}]}
{"ideal":"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.\n","role":"system"}]}
{"ideal":"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.\n","role":"system"}]}
{"ideal":"select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .\n","role":"system"}]}
{"ideal":"select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?\n","role":"system"}]}
{"ideal":"SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Which first names are used for professionals or owners but are not used as dog names?\n","role":"system"}]}
{"ideal":"SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Breeds. Columns: breed_code (text), breed_name (text)\nTable: Charges. Columns: charge_id (number), charge_type (text), charge_amount (number)\nTable: Sizes. Columns: size_code (text), size_description (text)\nTable: Treatment_Types. Columns: treatment_type_code (text), treatment_type_description (text)\nTable: Owners. Columns: owner_id (number), first_name (text), last_name (text), street (text), city (text), state (text), zip_code (text), email_address (text), home_phone (text), cell_number (text)\nTable: Dogs. Columns: dog_id (number), owner_id (number), abandoned_yn (text), breed_code (text), size_code (text), name (text), age (text), date_of_birth (time), gender (text), weight (text), date_arrived (time), date_adopted (time), date_departed (time)\nTable: Professionals. Columns: professional_id (number), role_code (text), first_name (text), street (text), city (text), state (text), zip_code (text), last_name (text), email_address (text), home_phone (text), cell_number (text)\nTable: Treatments. Columns: treatment_id (number), dog_id (number), professional_id (number), treatment_type_code (text), date_of_treatment (time), cost_of_treatment (number)\n\nQuestion: Find the first names that are used for professionals or owners but are not used as dog names.\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM singer","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: How many singers are there?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM singer","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: What is the count of singers?\n","role":"system"}]}
{"ideal":"SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: List the name of singers in ascending order of net worth.\n","role":"system"}]}
{"ideal":"SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: What are the names of singers ordered by ascending net worth?\n","role":"system"}]}
{"ideal":"SELECT Birth_Year ,  Citizenship FROM singer","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: What are the birth year and citizenship of singers?\n","role":"system"}]}
{"ideal":"SELECT Birth_Year ,  Citizenship FROM singer","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: What are the birth years and citizenships of the singers?\n","role":"system"}]}
{"ideal":"SELECT Name FROM singer WHERE Citizenship != \"France\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: List the name of singers whose citizenship is not \"France\".\n","role":"system"}]}
{"ideal":"SELECT Name FROM singer WHERE Citizenship != \"France\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: What are the names of the singers who are not French citizens?\n","role":"system"}]}
{"ideal":"SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: Show the name of singers whose birth year is either 1948 or 1949?\n","role":"system"}]}
{"ideal":"SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: singer. Columns: Singer_ID (number), Name (text), Birth_Year (number), Net_Worth_Millions (number), Citizenship (text)\nTable: song. Columns: Song_ID (number), Title (text), Singer_ID (number), Sales (number), Highest_Position (number)\n\nQuestion: What are the names of the singers whose birth years are either 1948 or 1949?\n","role":"system"}]}
{"ideal":"SELECT count(*) FROM Other_Available_Features","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Feature_Types. Columns: feature_type_code (text), feature_type_name (text)\nTable: Ref_Property_Types. Columns: property_type_code (text), property_type_description (text)\nTable: Other_Available_Features. Columns: feature_id (number), feature_type_code (text), feature_name (text), feature_description (text)\nTable: Properties. Columns: property_id (number), property_type_code (text), date_on_market (time), date_sold (time), property_name (text), property_address (text), room_count (number), vendor_requested_price (number), buyer_offered_price (number), agreed_selling_price (number), apt_feature_1 (text), apt_feature_2 (text), apt_feature_3 (text), fld_feature_1 (text), fld_feature_2 (text), fld_feature_3 (text), hse_feature_1 (text), hse_feature_2 (text), hse_feature_3 (text), oth_feature_1 (text), oth_feature_2 (text), oth_feature_3 (text), shp_feature_1 (text), shp_feature_2 (text), shp_feature_3 (text), other_property_details (text)\nTable: Other_Property_Features. Columns: property_id (number), feature_id (number), property_feature_description (text)\n\nQuestion: How many available features are there in total?\n","role":"system"}]}
{"ideal":"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Feature_Types. Columns: feature_type_code (text), feature_type_name (text)\nTable: Ref_Property_Types. Columns: property_type_code (text), property_type_description (text)\nTable: Other_Available_Features. Columns: feature_id (number), feature_type_code (text), feature_name (text), feature_description (text)\nTable: Properties. Columns: property_id (number), property_type_code (text), date_on_market (time), date_sold (time), property_name (text), property_address (text), room_count (number), vendor_requested_price (number), buyer_offered_price (number), agreed_selling_price (number), apt_feature_1 (text), apt_feature_2 (text), apt_feature_3 (text), fld_feature_1 (text), fld_feature_2 (text), fld_feature_3 (text), hse_feature_1 (text), hse_feature_2 (text), hse_feature_3 (text), oth_feature_1 (text), oth_feature_2 (text), oth_feature_3 (text), shp_feature_1 (text), shp_feature_2 (text), shp_feature_3 (text), other_property_details (text)\nTable: Other_Property_Features. Columns: property_id (number), feature_id (number), property_feature_description (text)\n\nQuestion: What is the feature type name of feature AirCon?\n","role":"system"}]}
{"ideal":"SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Feature_Types. Columns: feature_type_code (text), feature_type_name (text)\nTable: Ref_Property_Types. Columns: property_type_code (text), property_type_description (text)\nTable: Other_Available_Features. Columns: feature_id (number), feature_type_code (text), feature_name (text), feature_description (text)\nTable: Properties. Columns: property_id (number), property_type_code (text), date_on_market (time), date_sold (time), property_name (text), property_address (text), room_count (number), vendor_requested_price (number), buyer_offered_price (number), agreed_selling_price (number), apt_feature_1 (text), apt_feature_2 (text), apt_feature_3 (text), fld_feature_1 (text), fld_feature_2 (text), fld_feature_3 (text), hse_feature_1 (text), hse_feature_2 (text), hse_feature_3 (text), oth_feature_1 (text), oth_feature_2 (text), oth_feature_3 (text), shp_feature_1 (text), shp_feature_2 (text), shp_feature_3 (text), other_property_details (text)\nTable: Other_Property_Features. Columns: property_id (number), feature_id (number), property_feature_description (text)\n\nQuestion: Show the property type descriptions of properties belonging to that code.\n","role":"system"}]}
{"ideal":"SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1","input":[{"content":"Answer the following question with syntactically correct SQLite SQL. Be creative but the SQL must be correct.\nUse only the following tables and columns:\nTable: Ref_Feature_Types. Columns: feature_type_code (text), feature_type_name (text)\nTable: Ref_Property_Types. Columns: property_type_code (text), property_type_description (text)\nTable: Other_Available_Features. Columns: feature_id (number), feature_type_code (text), feature_name (text), feature_description (text)\nTable: Properties. Columns: property_id (number), property_type_code (text), date_on_market (time), date_sold (time), property_name (text), property_address (text), room_count (number), vendor_requested_price (number), buyer_offered_price (number), agreed_selling_price (number), apt_feature_1 (text), apt_feature_2 (text), apt_feature_3 (text), fld_feature_1 (text), fld_feature_2 (text), fld_feature_3 (text), hse_feature_1 (text), hse_feature_2 (text), hse_feature_3 (text), oth_feature_1 (text), oth_feature_2 (text), oth_feature_3 (text), shp_feature_1 (text), shp_feature_2 (text), shp_feature_3 (text), other_property_details (text)\nTable: Other_Property_Features. Columns: property_id (number), feature_id (number), property_feature_description (text)\n\nQuestion: What are the names of properties that are either houses or apartments with more than 1 room?\n","role":"system"}]}